#docker-compose版本
version: "3.9"
#服務，每個功能或容器就是一個服務。
services:

  ###############
  #銀行django#
  ###############
  #服務名稱
  bank-django-service:
    #這個是我們的映像檔名稱，可以自己選擇，或者使用現有映像檔
    image: bank-django-service:0.0
    #用在這個資料夾下的Dockerfile建立映像檔
    build: ./dockerfiles/bank-django-service/
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    #容器外的/codes/bank-django-service:/code對應到容器內的
    volumes:
      - ./codes/bank-django-service:/code
    # 開啟 8080 port 對外，對應到內部的80port
    ports:
      - "8081:8000"
    # 啟動後指令
    command: "python init.py" 
    # 環境變數
    environment:
      # Django的預設密碼
      DJANGO_SUPERUSER_PASSWORD: dev
      # Django連入的 redis 的IP
      REDIS_IP: 10.0.0.3
      # Django連入的 redis 的密碼
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # MySQL資料庫
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      # MySQL使用者
      MYSQL_USER: ${MYSQL_USER}
      # MySQL密碼
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # MySQL IP 或網址
      MYSQL_IP: 10.0.0.2
      # ECDSA 公鑰
      ECDSA_PUBLICKEY: ${ECDSA_PUBLICKEY}
      # ECDSA 私鑰
      ECDSA_PRIVATEKEY: ${ECDSA_PRIVATEKEY}
      # ECDSA 公鑰2
      ECDSA_PUBLICKEY_2: ${ECDSA_PUBLICKEY_2}
      # ECDSA 私鑰2
      ECDSA_PRIVATEKEY_2: ${ECDSA_PRIVATEKEY_2}
      # 銀行Django金鑰
      BANK_SECRET_KEY: ${BANK_SECRET_KEY}
      # 銀行Django 內網 IP
      BANK_DJANGO_SERVICE_IP: 10.0.0.1
      # 使用者密碼學支援服務URL
      USER_CRYPTOGRAPHY_SUPPORT_FLASK_SERVICE_URL:  http://10.0.0.6
    # 等待資料庫系統運作後再啟動
    depends_on:
      - bank-database-service
    #網路IP設置
    networks:
      devnetwork:
        ipv4_address: 10.0.0.1

  #########
  #銀行資料庫#
  #########
  #服務名稱
  bank-database-service:
    #這個是我們的映像檔名稱，可以自己選擇，或者使用現有映像檔
    image: bank-database-service:0.0
    #用在這個資料夾下的Dockerfile建立映像檔
    build: ./dockerfiles/bank-database-service/
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    # 開啟 8082 port 對外，對應到內部的3306port
    ports:
      - "8082:3306"
    # 啟動後指令
    command: --default-authentication-plugin=mysql_native_password
    #網路IP設置
    networks:
      devnetwork:
        ipv4_address: 10.0.0.2

  #########
  #銀行Redis#
  #########
  #服務名稱
  bank-redis-service:
    #這個是我們的映像檔名稱，可以自己選擇，或者使用現有映像檔
    image: redis:6.2-alpine
    ports:
      - '8083:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    #網路IP設置
    networks:
      devnetwork:
        ipv4_address: 10.0.0.3

  #########
  #API文檔服務#
  #########
  #服務名稱，如果我們要登入容器是要輸入服務名稱的，隨意取名即可
  swagger-server:
    #這個是我們的映像檔名稱，可以自己選擇，當映像檔建立時就會是 store-server版本0.0
    image: swaggerapi/swagger-ui
    #環境變數
    environment:
      -  SWAGGER_JSON=/app/swagger.yaml
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    volumes:
      - ./codes/swagger:/app
    # 開啟 8081 port 對外
    ports:
      - "8085:8080"
    # 啟動後指令
    command: ""
    #網路IP設置
    networks:
      devnetwork:
        ipv4_address: 10.0.0.4

  ###############
  #使用者密碼學支援服務#
  ###############
  #服務名稱
  user-cryptography-support-flask-service:
    #這個是我們的映像檔名稱，可以自己選擇，或者使用現有映像檔
    image: user-cryptography-support-flask-service:0.0
    #用在這個資料夾下的Dockerfile建立映像檔
    build: ./dockerfiles/user-cryptography-support-flask-service/
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    #容器外的/codes/user-cryptography-support-flask-service對應到容器內的code
    volumes:
      - ./codes/user-cryptography-support-flask-service:/code
    # 開啟 8080 port 對外，對應到內部的80port
    ports:
      - "8086:5000"
    # 啟動後指令
    command: "python init.py" 
    # 環境變數
    environment:
      # Flask 除錯模式
      FLASK_DEBUG: 1
      # ECDSA 公鑰
      ECDSA_PUBLICKEY: ${ECDSA_PUBLICKEY}
      # ECDSA 私鑰
      ECDSA_PRIVATEKEY: ${ECDSA_PRIVATEKEY}
      # ECDSA 公鑰2
      ECDSA_PUBLICKEY_2: ${ECDSA_PUBLICKEY_2}
      # ECDSA 私鑰2
      ECDSA_PRIVATEKEY_2: ${ECDSA_PRIVATEKEY_2}
      # Django 銀行伺服器的URL
      BANK_DJANGO_SERVICE_URL: "http://10.0.0.1:8000"
    # 等待資料庫系統運作後再啟動
    #網路IP設置
    networks:
      devnetwork:
        ipv4_address: 10.0.0.6

networks:
  #網路名稱為devnetwork，該名稱可以變更。
  devnetwork:
    driver: bridge
    ipam:
     config:
       - subnet: 10.0.0.0/16
         gateway: 10.0.0.254